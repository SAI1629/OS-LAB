#include<stdio.h>
int main()
{
	int p,c,count=0,i,j,alc[5][3], max[5][3],need[5][3],safe[5],avaliable[3],done[5],terminate=0;
	printf("enter the number of process and resources");
	scanf("%d %d",&p,&c);
	printf("enter allocation of resource of all process %d%d matrix",p,c);
	for(i=0;i<p;i++){
	   for(j=0;j<c;j++){
	   	scanf("%d",&alc[i][j]);
	   }
    }
    printf("enter the max resources process required %d%d matrix",p,c);
    for(i=0;i<p;i++){
	   for(j=0;j<c;j++){
	   	scanf("%d",&max[i][j]);
	   }
	}
	printf("enter the avaliable resource");
	for(i=0;i<c;i++)
	   scanf("%d",&avaliable[i]);
	printf("\n need resources matrix are\n");
	for(i=0;i<p;i++){
		for(j=0;j<c;j++){
		  need[i][j]=max[i][j]-alc[i][j];
		  printf("%d\t",need[i][j]);
		}
	}
	for(i=0;i<p;i++){
		done[i]=0;
	}
	while(count<p){
		for(i=0;i<p;i++){
		   if(done[i]==0){
		   	for(j=0;j<c;j++){
		   		if(need[i][j]>avaliable[j])
		   		  break;
			   }
			   if(j==c){
			   	  safe[count]=i;
			   	  done[i]=1;
			   	  for(j=0;j<c;j++){
			   	  	avaliable[j]+=alc[i][j];
					 }
					 count++;
					 terminate=0;
			   }else{
			   	terminate++;
			   }
		   }
		}
		if(terminate==(p-1)){
			printf("safe sequence doesnot exist");
			break;
		}
	}
	if(terminate !=(p-1)){
		printf("\n avaliable resource after completion\n");
		for(i=0;i<c;i++){
			printf("%d\t",avaliable[i]);
		}
		printf("\n safe sequence are\n");
		for(i=0;i<p;i++){
			printf("p%d\t",safe[i]);
	}
  }
  return(0);
}
